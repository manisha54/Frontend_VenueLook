// Mocks generated by Mockito 5.4.2 from annotations
// in venue_look/test/unit_test/venue_unit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:io' as _i8;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:venue_look/core/failure/failure.dart' as _i6;
import 'package:venue_look/feature/venue/domain/entity/venue_entity.dart'
    as _i7;
import 'package:venue_look/feature/venue/domain/repository/venue_repository.dart'
    as _i2;
import 'package:venue_look/feature/venue/domain/use_case/venue_use_case.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeIVenueRepository_0 extends _i1.SmartFake
    implements _i2.IVenueRepository {
  _FakeIVenueRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [VenueUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockVenueUseCase extends _i1.Mock implements _i4.VenueUseCase {
  @override
  _i2.IVenueRepository get venueRepository => (super.noSuchMethod(
        Invocation.getter(#venueRepository),
        returnValue: _FakeIVenueRepository_0(
          this,
          Invocation.getter(#venueRepository),
        ),
        returnValueForMissingStub: _FakeIVenueRepository_0(
          this,
          Invocation.getter(#venueRepository),
        ),
      ) as _i2.IVenueRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.VenueEntity>>> venues() =>
      (super.noSuchMethod(
        Invocation.method(
          #venues,
          [],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, List<_i7.VenueEntity>>>.value(
                _FakeEither_1<_i6.Failure, List<_i7.VenueEntity>>(
          this,
          Invocation.method(
            #venues,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, List<_i7.VenueEntity>>>.value(
                _FakeEither_1<_i6.Failure, List<_i7.VenueEntity>>(
          this,
          Invocation.method(
            #venues,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, List<_i7.VenueEntity>>>);
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.VenueEntity>>> getAllVenuesById(
          String? venueId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllVenuesById,
          [venueId],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, List<_i7.VenueEntity>>>.value(
                _FakeEither_1<_i6.Failure, List<_i7.VenueEntity>>(
          this,
          Invocation.method(
            #getAllVenuesById,
            [venueId],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, List<_i7.VenueEntity>>>.value(
                _FakeEither_1<_i6.Failure, List<_i7.VenueEntity>>(
          this,
          Invocation.method(
            #getAllVenuesById,
            [venueId],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, List<_i7.VenueEntity>>>);
  @override
  _i5.Future<_i3.Either<_i6.Failure, bool>> addVenue(_i7.VenueEntity? venue) =>
      (super.noSuchMethod(
        Invocation.method(
          #addVenue,
          [venue],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, bool>>.value(
            _FakeEither_1<_i6.Failure, bool>(
          this,
          Invocation.method(
            #addVenue,
            [venue],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, bool>>.value(
                _FakeEither_1<_i6.Failure, bool>(
          this,
          Invocation.method(
            #addVenue,
            [venue],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, bool>>);
  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> uploadVenuePicture(
          _i8.File? file) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadVenuePicture,
          [file],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, String>>.value(
            _FakeEither_1<_i6.Failure, String>(
          this,
          Invocation.method(
            #uploadVenuePicture,
            [file],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, String>>.value(
                _FakeEither_1<_i6.Failure, String>(
          this,
          Invocation.method(
            #uploadVenuePicture,
            [file],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, String>>);
  @override
  _i5.Future<_i3.Either<_i6.Failure, bool>> deleteVenue(String? venueId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteVenue,
          [venueId],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, bool>>.value(
            _FakeEither_1<_i6.Failure, bool>(
          this,
          Invocation.method(
            #deleteVenue,
            [venueId],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, bool>>.value(
                _FakeEither_1<_i6.Failure, bool>(
          this,
          Invocation.method(
            #deleteVenue,
            [venueId],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, bool>>);
  @override
  _i5.Future<_i3.Either<_i6.Failure, bool>> updateVenue(
    String? venueId,
    _i7.VenueEntity? venue,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateVenue,
          [
            venueId,
            venue,
          ],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, bool>>.value(
            _FakeEither_1<_i6.Failure, bool>(
          this,
          Invocation.method(
            #updateVenue,
            [
              venueId,
              venue,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, bool>>.value(
                _FakeEither_1<_i6.Failure, bool>(
          this,
          Invocation.method(
            #updateVenue,
            [
              venueId,
              venue,
            ],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, bool>>);
}
